// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using TaskManager.Data;

#nullable disable

namespace TaskManager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250821120743_AddNewColumnToTask")]
    partial class AddNewColumnToTask
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TagTask", b =>
                {
                    b.Property<int>("TagstagId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("TaskstaskId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("TagstagId", "TaskstaskId");

                    b.HasIndex("TaskstaskId");

                    b.ToTable("TaskTag", (string)null);
                });

            modelBuilder.Entity("TaskManager.Domain.Entities.Tag", b =>
                {
                    b.Property<int>("tagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tagId"));

                    b.Property<string>("tagName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("tagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("TaskManager.Domain.Entities.Task", b =>
                {
                    b.Property<int>("taskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("taskId"));

                    b.Property<bool>("isFinished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("taskDeadline")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("taskDescription")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("taskName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("usrId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("taskId");

                    b.HasIndex("usrId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskManager.Domain.Entities.User", b =>
                {
                    b.Property<int>("usrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("usrId"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<byte[]>("passwordHash")
                        .IsRequired()
                        .HasColumnType("RAW(2000)");

                    b.Property<byte[]>("passwordSalt")
                        .IsRequired()
                        .HasColumnType("RAW(2000)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("userRole")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("verificationToken")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("verificationTokenExpiration")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<bool>("verified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("verifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("usrId");

                    b.HasIndex("email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TagTask", b =>
                {
                    b.HasOne("TaskManager.Domain.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagstagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskManager.Domain.Entities.Task", null)
                        .WithMany()
                        .HasForeignKey("TaskstaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TaskManager.Domain.Entities.Task", b =>
                {
                    b.HasOne("TaskManager.Domain.Entities.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("usrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskManager.Domain.Entities.User", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
